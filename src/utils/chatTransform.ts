import type { TreeBlock, Item } from '@/types/block'

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã –¥–ª—è –¥–∞–Ω–Ω—ã—Ö —á–∞—Ç–∞ (–æ–±–Ω–æ–≤–ª–µ–Ω—ã –ø–æ–¥ —Ä–µ–∞–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ—Ç –±—ç–∫–µ–Ω–¥–∞)
export interface MessageComponent {
  component_name: string
  parent_block_id: string
  items: ComponentItem[]
}

export interface ComponentItem {
  title?: string
  data: any
  status: string
  variable?: string // –ú–æ–∂–µ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö
}

/**
 * –¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –º–∞—Å—Å–∏–≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ TreeBlock —Ñ–æ—Ä–º–∞—Ç
 * –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å BlockRenderer
 */
export function transformMessageComponentsToTreeBlocks(components: MessageComponent[]): TreeBlock[] {
  return components.map((component, index) => {
    const componentId = `chat-${component.component_name}-${index}`
    
    const treeBlock: TreeBlock = {
      component_name: component.component_name,
      component_id: componentId,
      components_id: `chat-components-${componentId}`,
      parent_block_id: component.parent_block_id || 'chat-message',
      action_mode: getActionModeFromComponent(component.component_name),
      items: transformComponentItems(component.items, component.component_name),
      action_params: []
    }

    console.log(`  ‚úÖ –¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω –±–ª–æ–∫: ${component.component_name} ‚Üí ${treeBlock.items?.length || 0} items`)
    return treeBlock
  })
}

/**
 * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç action_mode –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–∏–ø–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
 */
function getActionModeFromComponent(componentName: string): string {
  switch (componentName) {
    case 'text_block':
      return 'layout'
    case 'picture_block':
      return 'layout'
    case 'action_button':
      return 'layout'
    default:
      return 'layout'
  }
}

/**
 * –¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä—É–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç Item
 */
function transformComponentItems(items: ComponentItem[], componentName: string): Item[] {
  console.log(`  üîß –¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä—É–µ–º ${items.length} items –¥–ª—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ ${componentName}`)
  
  return items.map((item, index) => {
    console.log(`    üìù Item ${index}: title="${item.title}", status="${item.status}"`)
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ —Å–ª—É—á–∞–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    let transformedData = item.data
    
    // –î–ª—è picture_block - –¥–∞–Ω–Ω—ã–µ —É–∂–µ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ (–æ–±—ä–µ–∫—Ç —Å src –∏ alt)
    if (componentName === 'picture_block' && typeof item.data === 'object') {
      transformedData = item.data
    }
    
    // –î–ª—è action_button - –∏—Å–ø–æ–ª—å–∑—É–µ–º title –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    if (componentName === 'action_button' && item.title) {
      transformedData = item.title
    }
    
    const transformedItem: Item = {
      title: item.title,
      data: transformedData,
      status: mapBackendStatus(item.status),
      ...(item.variable && { variable: item.variable })
    }
    
    console.log(`    ‚úÖ –¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–æ –≤:`, transformedItem)
    return transformedItem
  })
}

/**
 * –ú–∞–ø–∏–º —Å—Ç–∞—Ç—É—Å—ã –æ—Ç –±—ç–∫–µ–Ω–¥–∞ –Ω–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ —Å—Ç–∞—Ç—É—Å—ã —Å–∏—Å—Ç–µ–º—ã
 */
function mapBackendStatus(backendStatus: string): string {
  const statusMap: Record<string, string> = {
    'nice': 'normal',
    'warning': 'missed',
    'alert': 'unprocessed',
    'normal': 'normal'
  }
  
  return statusMap[backendStatus] || backendStatus
}

/**
 * –°–æ–∑–¥–∞–µ—Ç TreeBlock –¥–ª—è –æ–¥–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ–±—ã—á–Ω—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –±–µ–∑ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
 */
export function createTextMessageBlock(content: string, messageId: string): TreeBlock {
  return {
    component_name: 'text_block',
    component_id: messageId,
    components_id: `text-${messageId}`,
    parent_block_id: 'chat-message',
    action_mode: 'layout',
    items: [{
      data: content,
      status: 'normal'
    }],
    action_params: []
  }
} 