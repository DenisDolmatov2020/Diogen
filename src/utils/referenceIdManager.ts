const REFERENCE_ID_KEY = 'diogen_reference_id'

interface ReferenceIdConfig {
  projectId: string
  userId: string
  timestamp: number
}

/**
 * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —á–∞—Å—Ç–∏—á–Ω—ã–π reference_id (—Ç–æ–ª—å–∫–æ project_id.user_id)
 * –§–æ—Ä–º–∞—Ç: PROJECT_ID.USER_ID
 */
export function generatePartialReferenceId(): string {
  const projectId = import.meta.env.VITE_PROJECT_ID || '000'
  const userId = import.meta.env.VITE_USER_ID || '3654823'
  
  const partialReferenceId = `${projectId}.${userId}`
  
  console.log('üÜî [generatePartialReferenceId] –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —á–∞—Å—Ç–∏—á–Ω—ã–π reference_id:', {
    projectId,
    userId,
    partialReferenceId
  })
  
  return partialReferenceId
}

/**
 * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–π reference_id –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏ —Ç–µ–∫—É—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
 * –§–æ—Ä–º–∞—Ç: PROJECT_ID.USER_ID.TIMESTAMP
 */
export function generateReferenceId(): string {
  const projectId = import.meta.env.VITE_PROJECT_ID || '000'
  const userId = import.meta.env.VITE_USER_ID || '3654823'
  const timestamp = Math.floor(Date.now() / 1000) // Unix timestamp –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
  
  const referenceId = `${projectId}.${userId}.${timestamp}`
  
  console.log('üÜî [generateReferenceId] –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–π reference_id:', {
    projectId,
    userId,
    timestamp,
    referenceId
  })
  
  return referenceId
}

/**
 * –°–æ—Ö—Ä–∞–Ω—è–µ—Ç reference_id –≤ localStorage
 */
export function saveReferenceId(referenceId: string): void {
  try {
    localStorage.setItem(REFERENCE_ID_KEY, referenceId)
    console.log('üíæ [saveReferenceId] –°–æ—Ö—Ä–∞–Ω–µ–Ω reference_id –≤ localStorage:', referenceId)
  } catch (error) {
    console.error('‚ùå [saveReferenceId] –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ localStorage:', error)
  }
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—É—â–∏–π reference_id –∏–∑ localStorage
 */
export function getCurrentReferenceId(): string | null {
  try {
    const referenceId = localStorage.getItem(REFERENCE_ID_KEY)
    console.log('üìñ [getCurrentReferenceId] –ü–æ–ª—É—á–µ–Ω reference_id –∏–∑ localStorage:', referenceId)
    return referenceId
  } catch (error) {
    console.error('‚ùå [getCurrentReferenceId] –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –∏–∑ localStorage:', error)
    return null
  }
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç reference_id –∏–ª–∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –Ω–æ–≤—ã–π, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
 */
export function getOrCreateReferenceId(): string {
  let referenceId = getCurrentReferenceId()
  
  if (!referenceId) {
    console.log('üîÑ [getOrCreateReferenceId] reference_id –Ω–µ –Ω–∞–π–¥–µ–Ω, –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–π')
    referenceId = generateReferenceId()
    saveReferenceId(referenceId)
  } else {
    console.log('‚úÖ [getOrCreateReferenceId] –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π reference_id:', referenceId)
  }
  
  return referenceId
}

/**
 * –û—á–∏—â–∞–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π reference_id (–¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ —Å–µ–∞–Ω—Å–∞)
 */
export function clearReferenceId(): void {
  try {
    localStorage.removeItem(REFERENCE_ID_KEY)
    console.log('üóëÔ∏è [clearReferenceId] reference_id —É–¥–∞–ª–µ–Ω –∏–∑ localStorage')
  } catch (error) {
    console.error('‚ùå [clearReferenceId] –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ localStorage:', error)
  }
}

/**
 * –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π reference_id –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –µ–≥–æ
 */
export function createNewReferenceId(): string {
  console.log('üÜï [createNewReferenceId] –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π reference_id')
  const referenceId = generateReferenceId()
  saveReferenceId(referenceId)
  return referenceId
}

/**
 * –°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π reference_id —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–µ—Ä (–≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —á–∞—Å—Ç–∏—á–Ω—ã–π ID –ª–æ–∫–∞–ª—å–Ω–æ, 
 * –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä –∏ –ø–æ–ª—É—á–∞–µ—Ç –ø–æ–ª–Ω—ã–π ID —Å timestamp)
 */
export async function createNewReferenceIdFromServer(inputData?: {
  input_title?: string
  input_text?: string
  input_audio?: string
  input_file?: string
}): Promise<string> {
  try {
    console.log('üÜï [createNewReferenceIdFromServer] –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π reference_id —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–µ—Ä')
    
    // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º apiService –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    const { apiService } = await import('@/api/apiService')
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —á–∞—Å—Ç–∏—á–Ω—ã–π reference_id
    const partialReferenceId = generatePartialReferenceId()
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä –∏ –ø–æ–ª—É—á–∞–µ–º –ø–æ–ª–Ω—ã–π reference_id
    const fullReferenceId = await apiService.createFullReferenceId(partialReferenceId, inputData)
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª–Ω—ã–π reference_id
    saveReferenceId(fullReferenceId)
    
    return fullReferenceId
  } catch (error) {
    console.error('‚ùå [createNewReferenceIdFromServer] –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è reference_id —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–µ—Ä:', error)
    throw error
  }
}

/**
 * –ü–∞—Ä—Å–∏—Ç reference_id –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –µ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
 */
export function parseReferenceId(referenceId: string): ReferenceIdConfig | null {
  try {
    const parts = referenceId.split('.')
    if (parts.length !== 3) {
      throw new Error('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç reference_id')
    }
    
    return {
      projectId: parts[0],
      userId: parts[1],
      timestamp: parseInt(parts[2], 10)
    }
  } catch (error) {
    console.error('‚ùå [parseReferenceId] –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ reference_id:', error)
    return null
  }
} 