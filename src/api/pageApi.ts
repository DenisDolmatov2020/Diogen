import apiService from '@/api/apiService.ts'
import { treeToFlat, applyBackendData } from '@/utils/dataTransform'
import type { TreeBlock, FlatBlock } from '@/types/block'

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∑–∞–≥—Ä—É–∑–∫–∏
export interface LoadResult {
  data: TreeBlock[]
  isMockData: boolean
  error?: string
}

export async function fetchFilledConfig(treeConfig: TreeBlock[]): Promise<LoadResult> {
  try {
    console.log('üå≥ –ò—Å—Ö–æ–¥–Ω–∞—è –¥—Ä–µ–≤–æ–≤–∏–¥–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞:', JSON.stringify(treeConfig, null, 2))
    
    // 1. –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥—Ä–µ–≤–æ–≤–∏–¥–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –≤ –ø–ª–æ—Å–∫—É—é –¥–ª—è –±—ç–∫–µ–Ω–¥–∞
    const flatConfig = treeToFlat(treeConfig)
    console.log('üöÄ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–ª–æ—Å–∫–∏–π –∫–æ–Ω—Ñ–∏–≥ –Ω–∞ –±—ç–∫–µ–Ω–¥:', flatConfig)
    
    // 2. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –±—ç–∫–µ–Ω–¥ —á–µ—Ä–µ–∑ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –º–µ—Ç–æ–¥
    const responseData = await apiService.sendRequest(flatConfig)
    
    console.log('‚úÖ –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç –±—ç–∫–µ–Ω–¥–∞:', responseData)
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –±—ç–∫–µ–Ω–¥ –≤–µ—Ä–Ω—É–ª –º–∞—Å—Å–∏–≤
    if (!Array.isArray(responseData)) {
      console.warn('‚ö†Ô∏è –ë—ç–∫–µ–Ω–¥ –≤–µ—Ä–Ω—É–ª –Ω–µ –º–∞—Å—Å–∏–≤:', responseData)
      throw new Error('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç –±—ç–∫–µ–Ω–¥–∞: –æ–∂–∏–¥–∞–ª—Å—è –º–∞—Å—Å–∏–≤')
    }
    
    const backendData: FlatBlock[] = responseData
    
    // 3. –ü—Ä–∏–º–µ–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ—Ç –±—ç–∫–µ–Ω–¥–∞ –∫ –∏—Å—Ö–æ–¥–Ω–æ–π –¥—Ä–µ–≤–æ–≤–∏–¥–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ
    const updatedTree = applyBackendData(treeConfig, backendData)
    console.log('üîÑ –î–∞–Ω–Ω—ã–µ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã –∫ –¥–µ—Ä–µ–≤—É:', updatedTree)
    
    return {
      data: updatedTree,
      isMockData: false
    }
    
  } catch (error) {
    console.warn('‚ö†Ô∏è –ë—ç–∫–µ–Ω–¥ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º mock –¥–∞–Ω–Ω—ã–µ:', error)
    console.log('üå≥ –ò—Å—Ö–æ–¥–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–ª—è mock –¥–∞–Ω–Ω—ã—Ö:', JSON.stringify(treeConfig, null, 2))
    
    const mockData = generateMockTreeData(treeConfig)
    console.log('üé≠ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ mock –¥–∞–Ω–Ω—ã–µ:', JSON.stringify(mockData, null, 2))
    
    return {
      data: mockData,
      isMockData: true,
      error: error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'
    }
  }
}

function generateMockTreeData(treeConfig: TreeBlock[]): TreeBlock[] {
  console.log('üé≠ [generateMockTreeData] –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º mock –¥–∞–Ω–Ω—ã–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞')
  console.log('  üìä –í—Ö–æ–¥—è—â–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞:', JSON.stringify(treeConfig, null, 2))
  
  // –†–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π items
  const realBackendData = [
    {
      "component_name": "info_panel",
      "parent_block_id": "block-0-1-0",
      "component_id": "0",
      "items": [
        {
          "title": "–°—Ç–∞—Ç—É—Å",
          "data": "–ê–∫—Ç–∏–≤–Ω—ã–π",
          "hidden_data": "",
          "status": "normal",
          "variable": "19003",
          "fate": "readonly"
        },
        {
          "title": "–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç",
          "data": "–í—ã—Å–æ–∫–∏–π",
          "hidden_data": "",
          "status": "normal",
          "variable": "19004",
          "fate": "readonly"
        },
        {
          "title": "–ö–∞—Ç–µ–≥–æ—Ä–∏—è",
          "data": "–ù–æ–≤–æ—Å—Ç–∏",
          "hidden_data": "",
          "status": "normal",
          "variable": "19005",
          "fate": "readonly"
        },
        {
          "title": "–ê–≤—Ç–æ—Ä",
          "data": "–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤",
          "hidden_data": "",
          "status": "normal",
          "variable": "19006",
          "fate": "readonly"
        },
        {
          "title": "–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è",
          "data": "2024-01-15",
          "hidden_data": "",
          "status": "normal",
          "variable": "19007",
          "fate": "readonly"
        },
        {
          "title": "–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ",
          "data": "2024-01-20",
          "hidden_data": "",
          "status": "normal",
          "variable": "19008",
          "fate": "readonly"
        }
      ]
    },
    {
      "component_name": "action_button",
      "parent_block_id": "block-0-1-1",
      "component_id": "0.0",
      "items": [
        {
          "title": "–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å–∫–æ—Ä–∞",
          "hidden_data": "",
          "status": "normal",
          "variable": "11071",
          "fate": "readonly"
        }
      ]
    },
    {
      "component_name": "progress_bar",
      "parent_block_id": "block-0-1-1",
      "component_id": "1",
      "items": [
        {
          "title": "–ü—Ä–æ–≥—Ä–µ—Å—Å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è",
          "data": "75",
          "variable": "19009",
          "fate": "readonly"
        }
      ]
    },
    {
      "component_name": "text_block",
      "parent_block_id": "block-0-1-1",
      "component_id": "2",
      "items": [
        {
          "title": "–í—ã–≤–æ–¥—ã –ò–ò —ç–∫—Å–ø–µ—Ä—Ç–∞",
          "data": "–ê–Ω–∞–ª–∏–∑ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—ã—Å–æ–∫–∏–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª –ø—Ä–æ–µ–∫—Ç–∞...",
          "variable": "19010",
          "fate": "readonly"
        }
      ]
    },
    {
      "component_name": "text_block",
      "parent_block_id": "block-0-2",
      "component_id": "3",
      "items": [
        {
          "title": "–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞",
          "data": "—Ç–∞–π–º—Å",
          "variable": "project_name",
          "fate": "editable"
        }
      ]
    },
    {
      "component_name": "action_button",
      "parent_block_id": "block-0-2-1-0",
      "component_id": "3.0",
      "items": [
        {
          "title": "–û–±—â–∏–π –±—é–¥–∂–µ—Ç ",
          "hidden_data": "–ü—Ä–µ–¥–ø–æ–ª–æ–∂–µ–Ω–∏–µ –ò–ò: 700000.00",
          "status": "normal",
          "variable": "project_value",
          "fate": "editable"
        },
        {
          "title": "–°–æ—Ñ–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏–µ",
          "hidden_data": "–ü—Ä–µ–¥–ø–æ–ª–æ–∂–µ–Ω–∏–µ –ò–ò: 200000.00",
          "status": "normal",
          "variable": "cofinancing",
          "fate": "editable"
        },
        {
          "title": "–°—É–º–º–∞ –≥—Ä–∞–Ω—Ç–∞",
          "hidden_data": "–ü—Ä–µ–¥–ø–æ–ª–æ–∂–µ–Ω–∏–µ –ò–ò: 500000.00",
          "status": "normal",
          "variable": "grant_value",
          "fate": "editable"
        },
        {
          "title": "–¢–∏–ø –ø—Ä–æ–µ–∫—Ç–∞",
          "hidden_data": "–ü—Ä–µ–¥–ø–æ–ª–æ–∂–µ–Ω–∏–µ –ò–ò: –ò–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–π –ø—Ä–æ–µ–∫—Ç",
          "status": "normal",
          "variable": "type_project",
          "fate": "editable"
        },
        {
          "title": "–û–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞",
          "hidden_data": "–ü—Ä–µ–¥–ø–æ–ª–æ–∂–µ–Ω–∏–µ –ò–ò: –û–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞ –∑–∞–∫–ª—é—á–∞–µ—Ç—Å—è –≤ —Ä–∞—Å—Ç—É—â–µ–º –∏–Ω—Ç–µ—Ä–µ—Å–µ –∫ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–º, –ø–æ–∑–≤–æ–ª—è—é—â–∏–º –ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –±—É–¥—É—â–µ–µ, —á—Ç–æ –º–æ–∂–µ—Ç –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ —É–ª—É—á—à–∏—Ç—å –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—é –∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é –ª–∏—á–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏.",
          "status": "normal",
          "variable": "justification",
          "fate": "editable"
        },
        {
          "title": "–¶–µ–ª—å ",
          "hidden_data": "–ü—Ä–µ–¥–ø–æ–ª–æ–∂–µ–Ω–∏–µ –ò–ò: –û—Å–Ω–æ–≤–Ω–∞—è —Ü–µ–ª—å –ø—Ä–æ–µ–∫—Ç–∞ –∑–∞–∫–ª—é—á–∞–µ—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –∏ –≤–Ω–µ–¥—Ä–µ–Ω–∏–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –±—É–¥—É—â–µ–µ, —Å –ø–ª–∞–Ω–∏—Ä—É–µ–º—ã–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–µ –º–µ–Ω–µ–µ 10000 –≤ —Ç–µ—á–µ–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ –≥–æ–¥–∞.",
          "status": "normal",
          "variable": "aim",
          "fate": "editable"
        },
        {
          "title": "–ó–∞–¥–∞—á–∏  ",
          "hidden_data": "–ü—Ä–µ–¥–ø–æ–ª–æ–∂–µ–Ω–∏–µ –ò–ò: –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Ç–æ—Ç–∏–ø–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –æ—Ç–ª–∞–¥–∫–∞ —Å–∏—Å—Ç–µ–º—ã –ó–∞–ø—É—Å–∫ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤–æ–π –∫–∞–º–ø–∞–Ω–∏–∏ –°–±–æ—Ä –∏ –∞–Ω–∞–ª–∏–∑ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π",
          "status": "normal",
          "variable": "task",
          "fate": "editable"
        },
        {
          "title": "–ê–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å –ø—Ä–æ–µ–∫—Ç–∞",
          "hidden_data": "–ü—Ä–µ–¥–ø–æ–ª–æ–∂–µ–Ω–∏–µ –ò–ò: –ê–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å –ø—Ä–æ–µ–∫—Ç–∞ –æ–±—É—Å–ª–æ–≤–ª–µ–Ω–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å—é —É–ª—É—á—à–µ–Ω–∏—è —Å–ø–æ—Å–æ–±–æ–≤ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏ –≤ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–º –æ–±—â–µ—Å—Ç–≤–µ, –≥–¥–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –≤—Ä–µ–º–µ–Ω–∏ —Å—Ç–∞–Ω–æ–≤—è—Ç—Å—è –≤—Å–µ –±–æ–ª–µ–µ –≤–∞–∂–Ω—ã–º–∏.",
          "status": "normal",
          "variable": "relevance",
          "fate": "editable"
        },
        {
          "title": "–¶–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è",
          "hidden_data": "–ü—Ä–µ–¥–ø–æ–ª–æ–∂–µ–Ω–∏–µ –ò–ò: –¶–µ–ª–µ–≤–∞—è –≥—Ä—É–ø–ø–∞ –ø—Ä–æ–µ–∫—Ç–∞ –≤–∫–ª—é—á–∞–µ—Ç –º–æ–ª–æ–¥–µ–∂—å, —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–≤, –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω–Ω—ã—Ö –≤ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ —Å–≤–æ–∏–º –≤—Ä–µ–º–µ–Ω–µ–º.",
          "status": "normal",
          "variable": "target_group",
          "fate": "editable"
        },
        {
          "title": "–ì–µ–æ–≥—Ä–∞—Ñ–∏—è –ø—Ä–æ–µ–∫—Ç–∞",
          "hidden_data": "–ü—Ä–µ–¥–ø–æ–ª–æ–∂–µ–Ω–∏–µ –ò–ò: –ì–µ–æ–≥—Ä–∞—Ñ–∏—è –ø—Ä–æ–µ–∫—Ç–∞ –æ—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç –≤—Å—é —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—é –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏, —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –Ω–∞ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–π —Ä—ã–Ω–æ–∫.",
          "status": "normal",
          "variable": "geography",
          "fate": "editable"
        },
        {
          "title": "–ó–∞—è–≤–∏—Ç–µ–ª—å",
          "hidden_data": "–ü—Ä–µ–¥–ø–æ–ª–æ–∂–µ–Ω–∏–µ –ò–ò: –§–æ–Ω–¥ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π",
          "status": "normal",
          "variable": "applicant_name",
          "fate": "editable"
        },
        {
          "title": "–û–ì–†–ù",
          "hidden_data": "",
          "status": "normal",
          "variable": "applicant_ogrn",
          "fate": "editable"
        }
      ]
    },
    {
      "component_name": "action_button",
      "parent_block_id": "block-0-2-1-1",
      "component_id": "3.1",
      "items": [
        {
          "title": "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è",
          "data": "",
          "hidden_data": "",
          "status": "normal",
          "variable": "11000",
          "fate": "readonly"
        }
      ]
    }
  ]
  
  // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∫ –∏—Å—Ö–æ–¥–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ
  const result = applyBackendData(treeConfig, realBackendData)
  console.log('üé≠ [generateMockTreeData] –ü—Ä–∏–º–µ–Ω–µ–Ω—ã —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:', JSON.stringify(result, null, 2))
  
  return result
}
