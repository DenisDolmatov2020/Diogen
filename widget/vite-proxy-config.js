// –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–æ–∫—Å–∏ –¥–ª—è Diogen Chat Widget
// –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ API URL –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤

import { defineConfig } from 'vite'

// –ö–∞—Ä—Ç–∞ –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö API —Å–µ—Ä–≤–µ—Ä–æ–≤ (–º–æ–∂–Ω–æ —Ä–∞—Å—à–∏—Ä—è—Ç—å)
const API_TARGETS = {
  // –•–µ—à –æ—Ç base64(url) -> —Ä–µ–∞–ª—å–Ω—ã–π URL
  'aHR0cHM6Ly9rbm93bGVkZ2Uuc2xvdm8tc29mdC5ydS9hcGkvdjEvbWVudG9yaXVt': 'https://knowledge.slovo-soft.ru',
  'aHR0cHM6Ly9hcGkxLmV4YW1wbGUuY29tL2NoYXQ': 'https://api1.example.com',
  'aHR0cHM6Ly9hcGkyLmV4YW1wbGUuY29tL2NoYXQ': 'https://api2.example.com',
  // –î–æ–±–∞–≤–ª—è–π—Ç–µ –Ω–æ–≤—ã–µ API –ø–æ –º–µ—Ä–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è target URL –∏–∑ –ø—Ä–æ–∫—Å–∏ –ø—É—Ç–∏
function getTargetFromProxyPath(path) {
  // –ò–∑–≤–ª–µ–∫–∞–µ–º —Ö–µ—à –∏–∑ –ø—É—Ç–∏ –≤–∏–¥–∞ /api/proxy-HASH
  const match = path.match(/\/api\/proxy-([a-zA-Z0-9]+)/);
  if (!match) return null;
  
  const hash = match[1];
  
  // –ò—â–µ–º –≤ –∫–∞—Ä—Ç–µ –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö API
  for (const [knownHash, target] of Object.entries(API_TARGETS)) {
    if (knownHash.startsWith(hash)) {
      return target;
    }
  }
  
  return null;
}

export const proxyConfig = {
  // –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –ø—Ä–æ–∫—Å–∏ –¥–ª—è –≤—Å–µ—Ö –≤–∏–¥–∂–µ—Ç–æ–≤
  '^/api/proxy-.*': {
    target: 'https://knowledge.slovo-soft.ru', // Fallback
    changeOrigin: true,
    secure: false,
    configure: (proxy, options) => {
      proxy.on('proxyReq', (proxyReq, req, res) => {
        // –ü—ã—Ç–∞–µ–º—Å—è –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ä–µ–∞–ª—å–Ω—ã–π target
        const realTarget = getTargetFromProxyPath(req.url);
        
        if (realTarget) {
          console.log(`üîÑ Proxy: ${req.url} ‚Üí ${realTarget}${req.url.replace(/\/api\/proxy-[^\/]+/, '')}`);
          
          // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –Ω–æ–≤–æ–≥–æ target
          const targetUrl = new URL(realTarget);
          proxyReq.setHeader('Host', targetUrl.host);
          
          // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø—É—Ç—å
          const originalPath = req.url.replace(/\/api\/proxy-[^\/]+/, '');
          proxyReq.path = originalPath || '/';
        } else {
          console.log(`‚ö†Ô∏è  Unknown proxy target for: ${req.url}`);
        }
      });
      
      proxy.on('proxyRes', (proxyRes, req, res) => {
        console.log(`üì• Response: ${proxyRes.statusCode} for ${req.url}`);
      });
      
      proxy.on('error', (err, req, res) => {
        console.error(`‚ùå Proxy error for ${req.url}:`, err.message);
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—É—é –æ—à–∏–±–∫—É
        if (!res.headersSent) {
          res.writeHead(500, { 'Content-Type': 'application/json' });
          res.end(JSON.stringify({
            error: 'Proxy configuration error',
            message: `Unable to proxy ${req.url}. Check your API configuration.`,
            instructions: 'Add your API URL to the API_TARGETS map in vite-proxy-config.js'
          }));
        }
      });
    }
  },
  
  // –°–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –ø—Ä–æ–∫—Å–∏ –¥–ª—è –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö API
  '/api/v1/mentorium': {
    target: 'https://knowledge.slovo-soft.ru',
    changeOrigin: true,
    secure: false
  }
}

// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ vite.config.js:
/*
import { proxyConfig } from './widget/vite-proxy-config.js'

export default defineConfig({
  server: {
    proxy: proxyConfig
  }
})
*/ 